{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","getUserPosts","userId","a","fetch","response","json","body","data","get30Users","people","filter","user","index","name","getPostDetails","postId","PostsList","setPostId","useState","posts","setPosts","selectedPostId","setSelectedPostId","getPosts","useEffect","handleCloseButton","className","map","post","key","id","title","type","onClick","getPostComments","deletePostComment","commentId","method","createPostComment","comment","headers","JSON","stringify","NewCommentForm","newName","setNewName","email","setEmail","text","setText","handleChange","changeEvent","callback","target","value","onSubmit","event","preventDefault","placeholder","onChange","PostDetails","setPost","comments","setComments","isVisible","setVisible","getComments","length","App","setUserId","users","setUsers","getUsers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a241fe60.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async(userId) => {\n  const response = userId === 0\n    ? await fetch(`${BASE_URL}/posts`)\n    : await fetch(`${BASE_URL}/posts?userId=${userId}`);\n\n  const body = await response.json();\n\n  return body.data;\n};\n\nexport const get30Users = async() => {\n  const response = await fetch(`${BASE_URL}/users`);\n\n  const body = await response.json();\n\n  const people = body.data.filter(\n    (user, index) => index < 30 && user.name,\n  );\n\n  return people;\n};\n\nexport const getPostDetails = async(postId) => {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n  const body = await response.json();\n\n  return body.data;\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getUserPosts } from '../../api/posts';\nimport './PostsList.scss';\n\nexport const PostsList = ({ userId, setPostId }) => {\n  const [posts, setPosts] = useState([]);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  const getPosts = async() => {\n    const response = await getUserPosts(userId);\n\n    setPosts(response);\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, [posts, userId]);\n\n  const handleCloseButton = () => {\n    setSelectedPostId('');\n  };\n\n  const handleOpenButton = (id) => {\n    setSelectedPostId(id);\n    setPostId(id);\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>\n                {`[User #${post.userId}]: `}\n              </b>\n              {post.title}\n            </div>\n            {post.id !== selectedPostId\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => handleOpenButton(post.id)}\n                >\n                  Open\n                </button>\n              )\n              : (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={handleCloseButton}\n                >\n                  Close\n                </button>\n              )\n            }\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  userId: PropTypes.number.isRequired,\n  setPostId: PropTypes.func.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async(postId) => {\n  const response = await fetch(`${BASE_URL}/comments/?postId=${postId}`);\n  const body = await response.json();\n\n  return body.data;\n};\n\nexport const deletePostComment = async(commentId) => {\n  const response = await fetch(\n    `${BASE_URL}/comments/${commentId}`, { method: 'DELETE' },\n  );\n\n  return response;\n};\n\nexport const createPostComment = async(comment) => {\n  const response = await fetch(\n    `${BASE_URL}/comments`, {\n      headers: {\n        'Content-type': 'application/json;charset=UTF-8',\n      },\n      method: 'POST',\n      body: JSON.stringify(comment),\n    },\n  );\n  const body = await response.json();\n\n  return body;\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPostComment } from '../../api/comments';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId }) => {\n  const [newName, setNewName] = useState('');\n  const [email, setEmail] = useState('');\n  const [text, setText] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    createPostComment({\n      postId,\n      name: newName,\n      email,\n      body: text,\n    });\n\n    setNewName('');\n    setEmail('');\n    setText('');\n  };\n\n  const handleChange = (changeEvent, callback) => {\n    callback(changeEvent.target.value);\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n      method=\"POST\"\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={newName}\n          onChange={event => handleChange(event, setNewName)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => handleChange(event, setEmail)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={text}\n          onChange={event => handleChange(event, setText)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deletePostComment } from '../../api/comments';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ postId }) => {\n  const [post, setPost] = useState(0);\n  const [comments, setComments] = useState([]);\n  const [isVisible, setVisible] = useState(true);\n\n  const getPosts = async() => {\n    const response = await getPostDetails(postId);\n\n    setPost(response);\n  };\n\n  const handleClick = () => {\n    setVisible(!isVisible);\n  };\n\n  const getComments = async() => {\n    const response = await getPostComments(postId);\n\n    setComments(response);\n  };\n\n  useEffect(() => {\n    getPosts();\n    getComments();\n  }, [comments]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={handleClick}\n        >\n          {`${isVisible ? 'Hide' : 'Show'} ${comments.length} comments`}\n        </button>\n\n        <ul className=\"PostDetails__list\">\n          {isVisible\n            && (\n              <ul className=\"PostDetails__list\">\n                {comments.map(comment => (\n                  <li key={comment.id} className=\"PostDetails__list-item\">\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => deletePostComment(comment.id)}\n                    >\n                      X\n                    </button>\n                    <p>{comment.body}</p>\n                  </li>\n                ))}\n              </ul>\n            )}\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm postId={postId} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { get30Users } from './api/posts';\n\nconst App = () => {\n  const [userId, setUserId] = useState(0);\n  const [postId, setPostId] = useState(null);\n  const [users, setUsers] = useState(null);\n\n  const handleSelect = (changeEvent) => {\n    setUserId(+changeEvent.target.value);\n  };\n\n  const getUsers = async() => {\n    const response = await get30Users();\n\n    setUsers(response);\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          {users && (\n            <select\n              className=\"App__user-selector\"\n              value={userId}\n              onChange={handleSelect}\n            >\n              <option value=\"0\">All users</option>\n              {users.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          )}\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={userId}\n            setPostId={setPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {!!postId && <PostDetails postId={postId} />}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}